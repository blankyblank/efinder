#!/bin/sh

set -e
set -u
set -a

EIX_LIMIT=0 
EIX_LIMIT_COMPACT=0
BG0=none;
BG1=none;
BG2=none;
BG3=none;
COLORSCHEME0=0;
COLORSCHEME1=0;
COLORSCHEME2=0;
COLORSCHEME3=0;

FORMAT_ALL_COMPACT="{system}(%{COLOR_CATEGORY_SYSTEM}){else}{profile}(%{COLOR_CATEGORY_PROFILE}){else}{world}\
(%{COLOR_CATEGORY_WORLD}){else}{world_sets}(%{COLOR_CATEGORY_WORLD_SETS}){else}(%{COLOR_CATEGORY}){}{}{}{}\
<category>/(%{COLOR_NORMAL}){marked}(%{COLOR_MARKED_NAME}){else}{world}(%{COLOR_WORLD}){else}{world_sets}\
(%{COLOR_WORLD_SETS}){else}(%{COLOR_NAME}){}{}{}<name>(%{COLOR_RESET}): {*modus=compact}(%{COLOR_NORMAL})\\((%{COLOR_NORMAL_END})\
{havemarkedversion}<markedversions:MARKEDVERSION>; {}{installed}%{INSTALLEDVERSIONS_COMPACT}\
{recommend} -> %{FORMAT_BEST_CHANGE}{}{else}%{FORMAT_BEST_COMPACT}{}(%{COLOR_NORMAL})\\) \
<description>(%{COLOR_NORMAL_END})%{FORMAT_FINISH}"

NAMEVERSION="{system}(%{COLOR_CATEGORY_SYSTEM}){else}{profile}(%{COLOR_CATEGORY_PROFILE}){else}{world}\
(%{COLOR_CATEGORY_WORLD}){else}{world_sets}(%{COLOR_CATEGORY_WORLD_SETS}){else}(%{COLOR_CATEGORY}){}{}{}{}\
<category>/(%{COLOR_NORMAL}){marked}(%{COLOR_MARKED_NAME}){else}{world}(%{COLOR_WORLD}){else}{world_sets}\
(%{COLOR_WORLD_SETS}){else}(%{COLOR_NAME}){}{}{}<name>(%{COLOR_RESET}):<version> <description> \n"

FZF_DEFAULT_OPTS="--no-sort -m --reverse --cycle --ansi --wrap --scroll-off=20 --no-separator \
  --delimiter : -n 1 --accept-nth=1 --info=inline-right  --pointer='>' --prompt='$ ' --marker='+' \
  --margin=0% --padding=0% --border=sharp --border-label-pos=24 --input-border=rounded --list-border=sharp \
  --preview-border=none --preview-label='Package Info' --preview-window 'top,35%' --preview='equery -N u -i {1}' \
  --color='16,hl:5, current-hl:5, gap-line:8, input-border:5, prompt:5, spinner:5, pointer:5, selected-hl:5, gutter:-1'  \
  --bind 'alt-u:preview:equery -N u -i {1}' --bind 'alt-d:preview:qdepends -qdrpbIQ --color {1}' \
  --bind 'alt-p:toggle-preview' --bind 'alt-h:preview:equery m -U {1}' \
  --bind 'alt-space:change-preview-window(right,40%|)' "

HISTORY=$HOME/.local/state/efzf

usage() {
  echo "available options are \n \
  none : to interactively search for files in the portage tree to emerge and \n \
  -d   : to interactively search for files in your world file to deselect \n \
  -h   : to show a help message \n" >&2
  exit 1
}

help_msg() {
  echo "   This is an interactive fuzzy finder for portage. \n \
  Ran with no options it will open a finder letting \n \
  you search through the packages available in the portage tree.\n \n \
  If you use the -d flag it will show the packages in your world file\n \
  and let you choose ones to deselect.\n \n \
  In the emerge script the default preview for the highlighted package \n \
  will show you its available use flags. \n \
  In the deselect script, the default preview will show the the package's \n \n \
  dependencies. \n \n \
  You can selected multiple packages in either mode with the tab key \n \
  then press enter to emerge, or --deslect the chosen packages. \n \n \
  It uses all the normal fzf key binds with a few extras added.\n \
  alt-p     : will toggle the preview window \n \
  alt-space : will toggle the preview position \n \
  alt-u     : will show use flags in the preview window\n \
  alt-d     : will show dependencies in the preview window \n \
  alt-h     : will show Upstream info in the preview window \n \
  Escape    : if you want to exit without emerging anything \n"
  exit
}

emerge_finder() {
  EIX_LIMIT_COMPACT=0

  local pkgpick=$(eix --color=always --pure-packages --compact -a | fzf --list-label='  Portage Tree  ')

  if [ -z "$pkgpick" ]; then
    exit
  else
    sudo emerge -v $(echo "$pkgpick")
  fi
  exit
}

deselect_finder() {
  local pkgpick=$(eix --color=always --pure-packages --compact --world --format '<installedversions:NAMEVERSION>' | fzf \
      --preview='qdepends -qdrpbIQ --color {1}' --list-label='  World File  ')
  if [ -z "$pkgpick" ]; then
    exit
  else
    sudo emerge --ask --deselect $(echo -n "$pkgpick")
  fi
  exit
}

while getopts "dh" flag; do
  case $flag in
    d) deselect_finder && exit 0 ;;
    h) help_msg && exit 0 ;;
    \?) usage ;;
  esac
done

if [ -n "$OPTIND" ]; then
  emerge_finder
fi
